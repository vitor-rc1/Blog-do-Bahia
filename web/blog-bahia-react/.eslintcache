[{"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Card.jsx":"1","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostAudio.jsx":"2","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Header.jsx":"3","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/App.jsx":"4","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostForm.jsx":"5","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/About.jsx":"6","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostContent.jsx":"7","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/index.js":"8","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostImage.jsx":"9","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBar.jsx":"10","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostText.jsx":"11","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBarIcon.jsx":"12","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBarContent.jsx":"13","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SectionForm.jsx":"14","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditSection.jsx":"15","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewPost.jsx":"16","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditPost.jsx":"17","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Post.jsx":"18","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewSection.jsx":"19","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostVideo.jsx":"20","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/reportWebVitals.js":"21","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Home.jsx":"22","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/services/api.jsx":"23"},{"size":906,"mtime":1610550176559,"results":"24","hashOfConfig":"25"},{"size":689,"mtime":1608049485248,"results":"26","hashOfConfig":"25"},{"size":280,"mtime":1610209529610,"results":"27","hashOfConfig":"25"},{"size":1491,"mtime":1610305063852,"results":"28","hashOfConfig":"25"},{"size":15456,"mtime":1610463400910,"results":"29","hashOfConfig":"25"},{"size":226,"mtime":1610288050035,"results":"30","hashOfConfig":"25"},{"size":1931,"mtime":1610551930978,"results":"31","hashOfConfig":"25"},{"size":287,"mtime":1606831178735,"results":"32","hashOfConfig":"25"},{"size":715,"mtime":1608049600763,"results":"33","hashOfConfig":"25"},{"size":987,"mtime":1610461357701,"results":"34","hashOfConfig":"25"},{"size":421,"mtime":1607988765105,"results":"35","hashOfConfig":"25"},{"size":433,"mtime":1610296448734,"results":"36","hashOfConfig":"25"},{"size":1295,"mtime":1610295504544,"results":"37","hashOfConfig":"25"},{"size":4428,"mtime":1610304995594,"results":"38","hashOfConfig":"25"},{"size":1291,"mtime":1610411394500,"results":"39","hashOfConfig":"25"},{"size":790,"mtime":1610546538304,"results":"40","hashOfConfig":"25"},{"size":1252,"mtime":1610368993842,"results":"41","hashOfConfig":"25"},{"size":806,"mtime":1610551836840,"results":"42","hashOfConfig":"25"},{"size":836,"mtime":1610304966494,"results":"43","hashOfConfig":"25"},{"size":728,"mtime":1608049667672,"results":"44","hashOfConfig":"25"},{"size":362,"mtime":1606143195543,"results":"45","hashOfConfig":"25"},{"size":833,"mtime":1610549813546,"results":"46","hashOfConfig":"25"},{"size":344,"mtime":1610550749503,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12k1xk1",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Card.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostAudio.jsx",[],["96","97"],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Header.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/App.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostForm.jsx",["98"],"import React from 'react';\nimport PostContent from './PostContent';\nimport Card from './Card';\n\nimport './PostForm.css';\n\nclass PostForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardText: '',\n      cardImg: '',\n      cardColor: '',\n      cardImgWidth: '',\n      cardTextColor: '',\n      cardTitle: '',\n      title: '',\n      titleColor: '',\n      section: '',\n      postItems: [],\n      preview: false\n    };\n    this.newItem = this.newItem.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.updateItemsState = this.updateItemsState.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n\n  }\n\n  newItem() {\n    const item = {\n      type: '',\n      position: '',\n      url: '',\n      text: '',\n      width: '',\n      height: '',\n      colorBackground: '',\n      colorText: '',\n      leftPos: '',\n      topPos: '',\n    }\n    if (this.state.postItems) {\n      this.setState({\n        postItems: [...this.state.postItems, item]\n      })\n    } else {\n      this.setState({\n        postItems: [item]\n      })\n    }\n  }\n\n  updatePost(field, newValue) {\n    this.setState({ [field]: newValue, preview: false });\n  }\n\n  updateItemsState(index, name, value) {\n    const items = this.state.postItems;\n    items[index][name] = value;\n    this.setState({ postItems: items, preview: false });\n  }\n\n  removeItem(indexItem) {\n    const items = this.state.postItems;\n    const filterdItems = items.filter((item, index) => index !== indexItem);\n    this.setState({ postItems: filterdItems, preview: false });\n  }\n\n  previewPost() {\n    return (\n      <div>\n        <Card cardContent={this.state} />\n        <PostContent post={this.state} />\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.propsToState(this.props.post)\n  }\n\n  propsToState(post) {\n    console.log(post)\n    this.setState({ ...post })\n  }\n\n  render() {\n    const items = this.state.postItems;\n    const {\n      cardText,\n      cardImg,\n      cardColor,\n      cardImgWidth,\n      cardTextColor,\n      cardTitle,\n      title,\n      titleColor,\n      section,\n      preview,\n      postItems,\n    } = this.state;\n    const { newPost, editPost } = this.props;\n    return (\n      <div>\n        <form>\n          <h2 className=\"title\">Criar post</h2>\n          <div className=\"container\">\n            <div className=\"page-content\">\n              <fieldset className=\"card-content\">\n                <label htmlFor=\"card-text\">Texto do cart√£o</label>\n                <textarea\n                  type=\"text\"\n                  id=\"card-text\"\n                  placeholder=\"Digite seu texto aqui\"\n                  name=\"cardText\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardText}\n                />\n\n                <label htmlFor=\"card-title\">T√≠tulo do cart√£o</label>\n                <input\n                  type=\"text\"\n                  id=\"card-title\"\n                  placeholder=\"URL\"\n                  name=\"cardTitle\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardTitle}\n                />\n\n                <label htmlFor=\"card-img\">Imagem do cart√£o</label>\n                <input\n                  type=\"text\"\n                  id=\"card-img\"\n                  placeholder=\"URL\"\n                  name=\"cardImg\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardImg}\n                />\n\n                <label htmlFor=\"card-img\">Tamanho da imagem do cart√£o</label>\n                <input\n                  type=\"text\"\n                  id=\"card-img-width\"\n                  placeholder=\"px\"\n                  name=\"cardImgWidth\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardImgWidth}\n                />\n\n                <label htmlFor=\"card-color\">Cor do cart√£o</label>\n                <input\n                  type=\"text\"\n                  id=\"card-color\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"cardColor\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardColor}\n                />\n\n                <label htmlFor=\"card-color\">Cor do texto do cart√£o</label>\n                <input\n                  type=\"text\"\n                  id=\"card-text-color\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"cardTextColor\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardTextColor}\n                />\n\n              </fieldset>\n\n\n              <fieldset className=\"items-page\">\n                <p>Conte√∫do da p√°gina</p>\n                <label htmlFor=\"post-section\">Se√ß√£o</label>\n                <input\n                  type=\"text\"\n                  id=\"post-section\"\n                  name=\"section\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={section}\n                />\n\n                <label htmlFor=\"post-title\">Titulo</label>\n                <input\n                  type=\"text\"\n                  id=\"post-title\"\n                  name=\"title\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={title}\n                />\n\n                <label htmlFor=\"post-title-color\">Cor do titulo</label>\n                <input\n                  type=\"text\"\n                  id=\"post-title-color\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"titleColor\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={titleColor}\n                />\n\n                {/* <label htmlFor=\"color-page\">Cor de fundo do post</label>\n                <input\n                  type=\"text\"\n                  id=\"color-page\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"colorPage\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={colorPage}\n                /> */}\n\n\n                <div>\n                  {items ? items.map((item, index) => {\n                    const { \n                      type, \n                      url, \n                      text, \n                      colorText,\n                      colorBackground, \n                      height, \n                      width, \n                      leftPos, \n                      topPos,\n                      position, \n                    } = postItems[index];\n                    return (\n                      <div className=\"item\" key={index}>\n                        <label htmlFor={`item-${index}`}>Tipo</label>\n                        <select\n                          id={`item-${index}`}\n                          name=\"type\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={type}\n                        >\n                          <option hidden={true}>Selecione</option>\n                          <option value=\"audio\">√Åudio</option>\n                          <option value=\"image\">Imagem</option>\n                          <option value=\"text\">Texto</option>\n                          <option value=\"video\">V√≠deo</option>\n                        </select>\n\n                        {/* <label htmlFor={`item-${index}`}>Posi√ß√£o</label>\n                        <select\n                          id={`item-position-${index}`}\n                          name=\"position\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={position}\n                        >\n                          <option hidden={true}>Selecione</option>\n                          <option value=\"left\">Esquerda</option>\n                          <option value=\"middle\">Meio</option>\n                          <option value=\"right\">Direita</option>\n                        </select> */}\n\n                        <label\n                          htmlFor={`item-URL-${index}`}\n                          hidden={type === 'text'}\n                        >\n                          URL\n                        </label>\n                        <input\n                          id={`item-URL-${index}`}\n                          type=\"text\"\n                          name=\"url\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={url}\n                          hidden={type === 'text'}\n\n                        />\n\n                        <label htmlFor={`item-text-${index}`}>Text</label>\n                        <textarea\n                          id={`item-text-${index}`}\n                          type=\"text\"\n                          name=\"text\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={text}\n                        />\n\n                        <label\n                          htmlFor={`item-width-${index}`}\n                          hidden={type === 'audio'}\n                        >\n                          Largura\n                        </label>\n                        <input\n                          id={`item-width-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"width\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={width}\n                          hidden={type === 'audio'}\n                        />\n\n                        <label\n                          htmlFor={`item-height-${index}`}\n                          hidden={type === 'audio' || type === 'text'}\n                        >\n                          Altura\n                        </label>\n                        <input\n                          id={`item-height-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"height\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={height}\n                          hidden={type === 'audio' || type === 'text'}\n                        />\n\n                        <label\n                          htmlFor={`item-top-${index}`}\n                        >\n                          Pos Y\n                        </label>\n                        <input\n                          id={`item-top-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"topPos\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={topPos}\n                        />\n\n                        <label\n                          htmlFor={`item-top-${index}`}\n                        >\n                          Pos X\n                        </label>\n                        <input\n                          id={`item-left-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"leftPos\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={leftPos}\n                        />\n\n                        <label\n                          htmlFor={`item-color-text-${index}`}\n                        >\n                          Cor do texto\n                          </label>\n                        <input\n                          id={`item-color-text-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"rgb(r, g, b)\"\n                          name=\"colorText\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={colorText}\n                        />\n\n                        <label\n                          htmlFor={`item-color-background-${index}`}\n                          hidden={type !== 'text'}\n                        >\n                          Cor de fundo\n                        </label>\n                        <input\n                          id={`item-color-background-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"rgb(r, g, b)\"\n                          name=\"colorBackground\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={colorBackground}\n                          hidden={type !== 'text'}\n                        />\n\n                        <button\n                          className=\"remove-button\"\n                          onClick={(event) => {\n                            event.preventDefault();\n                            this.removeItem(index);\n                          }}\n                        >\n                          remover\n                        </button>\n                      </div>\n                    )\n                  }) : <p>Adicione algum item</p>}\n                </div>\n              </fieldset>\n              <button id=\"add-item\" onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.newItem();\n                }\n              }\n              >\n                Adicionar conte√∫do\n              </button>\n\n            </div>\n\n          </div>\n          <div className=\"buttons\">\n            <button\n              id=\"create\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.props.handleSubmit(this.state);\n                }\n              }\n              hidden={!newPost}\n            >\n              Criar\n            </button>\n\n            <button\n              id=\"update\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.props.handleSubmit(this.state);\n                }\n              }\n              hidden={!editPost}\n            >\n              Atualizar\n            </button>\n\n            <button\n              id=\"preview\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.setState({ preview: true })\n                }\n              }\n            >\n              Preview\n            </button>\n          </div>\n\n        </form>\n\n        <div id=\"preview-post\">\n          {preview ? this.previewPost() : ''}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/About.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostContent.jsx",["99"],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/index.js",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostImage.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBar.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostText.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBarIcon.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBarContent.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SectionForm.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditSection.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewPost.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditPost.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Post.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewSection.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostVideo.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/reportWebVitals.js",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Home.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/services/api.jsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":228,"column":23,"nodeType":"106","messageId":"107","endLine":228,"endColumn":31},{"ruleId":"104","severity":1,"message":"108","line":18,"column":44,"nodeType":"106","messageId":"107","endLine":18,"endColumn":53},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'position' is assigned a value but never used.","Identifier","unusedVar","'colorPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]