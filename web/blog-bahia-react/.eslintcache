[{"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Card.jsx":"1","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostAudio.jsx":"2","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Header.jsx":"3","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/App.jsx":"4","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostForm.jsx":"5","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/About.jsx":"6","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostContent.jsx":"7","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/index.js":"8","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostImage.jsx":"9","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBar.jsx":"10","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostText.jsx":"11","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBarIcon.jsx":"12","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SectionForm.jsx":"13","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditSection.jsx":"14","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewPost.jsx":"15","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditPost.jsx":"16","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Post.jsx":"17","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewSection.jsx":"18","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostVideo.jsx":"19","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/reportWebVitals.js":"20","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Home.jsx":"21","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/services/api.jsx":"22","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Footer.jsx":"23","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Section.jsx":"24"},{"size":906,"mtime":1610550176559,"results":"25","hashOfConfig":"26"},{"size":689,"mtime":1608049485248,"results":"27","hashOfConfig":"26"},{"size":280,"mtime":1612965513649,"results":"28","hashOfConfig":"26"},{"size":1027,"mtime":1613132730655,"results":"29","hashOfConfig":"26"},{"size":17674,"mtime":1613056457182,"results":"30","hashOfConfig":"26"},{"size":299,"mtime":1613054226595,"results":"31","hashOfConfig":"26"},{"size":1949,"mtime":1613134762164,"results":"32","hashOfConfig":"26"},{"size":287,"mtime":1606831178735,"results":"33","hashOfConfig":"26"},{"size":715,"mtime":1608049600763,"results":"34","hashOfConfig":"26"},{"size":1497,"mtime":1613145161418,"results":"35","hashOfConfig":"26"},{"size":421,"mtime":1607988765105,"results":"36","hashOfConfig":"26"},{"size":331,"mtime":1613141750022,"results":"37","hashOfConfig":"26"},{"size":5594,"mtime":1613053707889,"results":"38","hashOfConfig":"26"},{"size":1044,"mtime":1612966907188,"results":"39","hashOfConfig":"26"},{"size":652,"mtime":1612966961469,"results":"40","hashOfConfig":"26"},{"size":1012,"mtime":1613139388249,"results":"41","hashOfConfig":"26"},{"size":1264,"mtime":1613139753749,"results":"42","hashOfConfig":"26"},{"size":678,"mtime":1612967275236,"results":"43","hashOfConfig":"26"},{"size":728,"mtime":1608049667672,"results":"44","hashOfConfig":"26"},{"size":362,"mtime":1606143195543,"results":"45","hashOfConfig":"26"},{"size":966,"mtime":1613130867566,"results":"46","hashOfConfig":"26"},{"size":1637,"mtime":1613055910074,"results":"47","hashOfConfig":"26"},{"size":531,"mtime":1613135840121,"results":"48","hashOfConfig":"26"},{"size":1751,"mtime":1613145590715,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12k1xk1",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Card.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostAudio.jsx",[],["104","105"],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Header.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/App.jsx",[],["106","107"],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostForm.jsx",["108"],"import React from 'react';\nimport PostContent from './PostContent';\nimport Card from './Card';\nimport { getSections } from '../services/api';\nimport './PostForm.css';\n\nclass PostForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      cardText: '',\n      cardImg: '',\n      cardColor: '',\n      cardImgWidth: '',\n      cardTextColor: '',\n      cardTitle: '',\n      colorPage: '',\n      colorNavFooter: '',\n      title: '',\n      titleColor: '',\n      section: '',\n      postItems: [],\n      preview: false,\n      selectionsOptions: []\n    };\n    this.newItem = this.newItem.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.updateItemsState = this.updateItemsState.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n    this.loadSections = this.loadSections.bind(this);\n  }\n\n  newItem() {\n    const item = {\n      type: '',\n      position: '',\n      url: '',\n      text: '',\n      width: '',\n      height: '',\n      colorBackground: '',\n      colorText: '',\n      leftPos: '',\n      topPos: '',\n    }\n    if (this.state.postItems) {\n      this.setState({\n        postItems: [...this.state.postItems, item]\n      })\n    } else {\n      this.setState({\n        postItems: [item]\n      })\n    }\n  }\n\n  updatePost(field, newValue) {\n    this.setState({ [field]: newValue, preview: false });\n  }\n\n  updateItemsState(index, name, value) {\n    const items = this.state.postItems;\n    items[index][name] = value;\n    this.setState({ postItems: items, preview: false });\n  }\n\n  removeItem(indexItem) {\n    const items = this.state.postItems;\n    const filterdItems = items.filter((item, index) => index !== indexItem);\n    this.setState({ postItems: filterdItems, preview: false });\n  }\n\n  previewPost() {\n    const {\n      id,\n      cardText: cardtext,\n      cardImg: cardimg,\n      cardColor: cardcolor,\n      cardImgWidth: cardimgwidth,\n      cardTextColor: cardtextcolor,\n      cardTitle: cardtitle,\n      colorPage: colorpage,\n      colorNavFooter: colornavfooter,\n      title,\n      titleColor: titlecolor,\n      postItems,\n    } = this.state\n    const cardPreview = {\n      id,\n      cardimg,\n      cardtext,\n      cardcolor,\n      cardtextcolor,\n      cardtitle,\n      cardimgwidth\n    }\n    const postPreview = {\n      title,\n      postitems: { postItems },\n      colorpage,\n      titlecolor,\n      colornavfooter,\n    }\n    return (\n      <div>\n        <Card cardContent={cardPreview} />\n        <PostContent post={postPreview} />\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    const { type } = this.props;\n    if (type === 'edit') {\n      this.propsToState(this.props.post);\n    }\n    this.loadSections();\n  }\n\n  async loadSections() {\n    const sections = await getSections();\n    this.setState({ selectionsOptions: sections });\n  }\n\n  propsToState(post) {\n    const {\n      id,\n      colorpage: colorPage,\n      cardtext: cardText,\n      cardimg: cardImg,\n      cardcolor: cardColor,\n      cardimgwidth: cardImgWidth,\n      cardtextcolor: cardTextColor,\n      cardtitle: cardTitle,\n      colornavfooter: colorNavFooter,\n      title,\n      titlecolor: titleColor,\n      section,\n      postitems: { postItems },\n    } = post;\n    this.setState({\n      id,\n      cardText,\n      cardImg,\n      cardColor,\n      cardImgWidth,\n      cardTextColor,\n      cardTitle,\n      title,\n      titleColor,\n      section,\n      postItems,\n      colorPage,\n      colorNavFooter,\n    })\n  }\n\n  render() {\n    const items = this.state.postItems;\n    const {\n      colorPage,\n      colorNavFooter,\n      cardText,\n      cardImg,\n      cardColor,\n      cardImgWidth,\n      cardTextColor,\n      cardTitle,\n      title,\n      titleColor,\n      section,\n      preview,\n      postItems,\n      selectionsOptions,\n    } = this.state;\n    const { newPost, editPost } = this.props;\n    return (\n      <div>\n        <form>\n          <h2 className=\"title\">Criar post</h2>\n          <div className=\"container\">\n            <div className=\"page-content\">\n              <fieldset className=\"card-content\">\n                <label htmlFor=\"card-text\">Texto do cartão</label>\n                <textarea\n                  type=\"text\"\n                  id=\"card-text\"\n                  placeholder=\"Digite seu texto aqui\"\n                  name=\"cardText\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardText}\n                />\n\n                <label htmlFor=\"card-title\">Título do cartão</label>\n                <input\n                  type=\"text\"\n                  id=\"card-title\"\n                  placeholder=\"URL\"\n                  name=\"cardTitle\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardTitle}\n                />\n\n                <label htmlFor=\"card-img\">Imagem do cartão</label>\n                <input\n                  type=\"text\"\n                  id=\"card-img\"\n                  placeholder=\"URL\"\n                  name=\"cardImg\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardImg}\n                />\n\n                <label htmlFor=\"card-img\">Tamanho da imagem do cartão</label>\n                <input\n                  type=\"text\"\n                  id=\"card-img-width\"\n                  placeholder=\"px\"\n                  name=\"cardImgWidth\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardImgWidth}\n                />\n\n                <label htmlFor=\"card-color\">Cor do cartão</label>\n                <input\n                  type=\"text\"\n                  id=\"card-color\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"cardColor\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardColor}\n                />\n\n                <label htmlFor=\"card-color\">Cor do texto do cartão</label>\n                <input\n                  type=\"text\"\n                  id=\"card-text-color\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"cardTextColor\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={cardTextColor}\n                />\n\n              </fieldset>\n\n\n              <fieldset className=\"items-page\">\n                <p>Conteúdo da página</p>\n                <label htmlFor=\"post-section\">Seção</label>\n                <select\n                  id=\"post-section\"\n                  name=\"section\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={section}\n                >\n                  {selectionsOptions\n                    .map(({ id, title }) => (<option key={id} value={title}>{title}</option>)\n                    )\n                  }\n                </select>\n\n                <label htmlFor=\"post-title\">Titulo</label>\n                <input\n                  type=\"text\"\n                  id=\"post-title\"\n                  name=\"title\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={title}\n                />\n\n                <label htmlFor=\"post-title-color\">Cor do titulo</label>\n                <input\n                  type=\"text\"\n                  id=\"post-title-color\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"titleColor\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={titleColor}\n                />\n\n                <label htmlFor=\"color-page\">Cor de fundo do post</label>\n                <input\n                  type=\"text\"\n                  id=\"color-page\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"colorPage\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={colorPage}\n                />\n\n                <label htmlFor=\"color-page\">Cor do rodapé e da barra lateral</label>\n                <input\n                  type=\"text\"\n                  id=\"color-page\"\n                  placeholder=\"rgb(r, g, b)\"\n                  name=\"colorNavFooter\"\n                  onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                  value={colorNavFooter}\n                />\n\n\n                <div>\n                  {items ? items.map((item, index) => {\n                    const {\n                      type,\n                      url,\n                      text,\n                      colorText,\n                      colorBackground,\n                      height,\n                      width,\n                      leftPos,\n                      topPos,\n                      position,\n                    } = postItems[index];\n                    return (\n                      <div className=\"item\" key={index}>\n                        <label htmlFor={`item-${index}`}>Tipo</label>\n                        <select\n                          id={`item-${index}`}\n                          name=\"type\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={type}\n                        >\n                          <option hidden={true}>Selecione</option>\n                          <option value=\"audio\">Áudio</option>\n                          <option value=\"image\">Imagem</option>\n                          <option value=\"text\">Texto</option>\n                          <option value=\"video\">Vídeo</option>\n                        </select>\n\n                        {/* <label htmlFor={`item-${index}`}>Posição</label>\n                        <select\n                          id={`item-position-${index}`}\n                          name=\"position\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={position}\n                        >\n                          <option hidden={true}>Selecione</option>\n                          <option value=\"left\">Esquerda</option>\n                          <option value=\"middle\">Meio</option>\n                          <option value=\"right\">Direita</option>\n                        </select> */}\n\n                        <label\n                          htmlFor={`item-URL-${index}`}\n                          hidden={type === 'text'}\n                        >\n                          URL\n                        </label>\n                        <input\n                          id={`item-URL-${index}`}\n                          type=\"text\"\n                          name=\"url\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={url}\n                          hidden={type === 'text'}\n\n                        />\n\n                        <label htmlFor={`item-text-${index}`}>Text</label>\n                        <textarea\n                          id={`item-text-${index}`}\n                          type=\"text\"\n                          name=\"text\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={text}\n                        />\n\n                        <label\n                          htmlFor={`item-width-${index}`}\n                          hidden={type === 'audio'}\n                        >\n                          Largura\n                        </label>\n                        <input\n                          id={`item-width-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"width\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={width}\n                          hidden={type === 'audio'}\n                        />\n\n                        <label\n                          htmlFor={`item-height-${index}`}\n                          hidden={type === 'audio' || type === 'text'}\n                        >\n                          Altura\n                        </label>\n                        <input\n                          id={`item-height-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"height\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={height}\n                          hidden={type === 'audio' || type === 'text'}\n                        />\n\n                        <label\n                          htmlFor={`item-top-${index}`}\n                        >\n                          Pos Y\n                        </label>\n                        <input\n                          id={`item-top-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"topPos\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={topPos}\n                        />\n\n                        <label\n                          htmlFor={`item-top-${index}`}\n                        >\n                          Pos X\n                        </label>\n                        <input\n                          id={`item-left-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"px\"\n                          name=\"leftPos\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={leftPos}\n                        />\n\n                        <label\n                          htmlFor={`item-color-text-${index}`}\n                        >\n                          Cor do texto\n                          </label>\n                        <input\n                          id={`item-color-text-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"rgb(r, g, b)\"\n                          name=\"colorText\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={colorText}\n                        />\n\n                        <label\n                          htmlFor={`item-color-background-${index}`}\n                          hidden={type !== 'text'}\n                        >\n                          Cor de fundo\n                        </label>\n                        <input\n                          id={`item-color-background-${index}`}\n                          type=\"text\"\n                          className=\"display\"\n                          placeholder=\"rgb(r, g, b)\"\n                          name=\"colorBackground\"\n                          onChange={({ target: { name, value } }) => this.updateItemsState(index, name, value)}\n                          value={colorBackground}\n                          hidden={type !== 'text'}\n                        />\n\n                        <button\n                          className=\"remove-button\"\n                          onClick={(event) => {\n                            event.preventDefault();\n                            this.removeItem(index);\n                          }}\n                        >\n                          remover\n                        </button>\n                      </div>\n                    )\n                  }) : <p>Adicione algum item</p>}\n                </div>\n              </fieldset>\n              <button id=\"add-item\" onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.newItem();\n                }\n              }\n              >\n                Adicionar conteúdo\n              </button>\n\n            </div>\n\n          </div>\n          <div className=\"buttons\">\n            <button\n              id=\"create\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.props.handleSubmit(this.state);\n                }\n              }\n              hidden={!newPost}\n            >\n              Criar\n            </button>\n\n            <button\n              id=\"update\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.props.handleSubmit(this.state);\n                }\n              }\n              hidden={!editPost}\n            >\n              Atualizar\n            </button>\n\n            <button\n              id=\"preview\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.setState({ preview: true })\n                }\n              }\n            >\n              Preview\n            </button>\n          </div>\n\n        </form>\n\n        <div id=\"preview-post\">\n          {preview ? this.previewPost() : ''}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/About.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostContent.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/index.js",[],["109","110"],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostImage.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBar.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostText.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SideBar/SideBarIcon.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/SectionForm.jsx",["111"],"import React from 'react';\nimport PostContent from './PostContent';\nimport Card from './Card';\n\nimport './PostForm.css';\n\nclass SectionForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      preview: false,\n      title: '',\n      img: '',\n      about: '',\n      indexText: '',\n      id: 0,\n      colorSection: '',\n      colorNavFooter: '',\n    };\n    this.updatePost = this.updatePost.bind(this);\n    this.updateItemsState = this.updateItemsState.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n\n  }\n\n  updatePost(field, newValue) {\n    this.setState({ [field]: newValue, preview: false });\n  }\n\n  updateItemsState(index, name, value) {\n    const items = this.state.postItems;\n    items[index][name] = value;\n    this.setState({ postItems: items, preview: false });\n  }\n\n  previewPost() {\n    return (\n      <div>\n        <PostContent post={this.state} />\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    const { type } = this.props;\n    if (type === 'edit') {\n      this.propsToState(this.props.post)\n    }\n  }\n\n  propsToState(post) {\n    const {\n      title,\n      img,\n      about,\n      indextext: indexText,\n      id,\n      colorsection: colorSection,\n      colornavfooter: colorNavFooter,\n    } = post\n    this.setState({\n      title,\n      img,\n      about,\n      indexText,\n      id,\n      colorSection,\n      colorNavFooter,\n    })\n  }\n\n  render() {\n    const {\n      title,\n      img,\n      about,\n      indexText,\n      preview,\n      colorSection,\n      colorNavFooter,\n    } = this.state;\n    const { newSection, editSection } = this.props;\n    return (\n      <div>\n        <form>\n          <h2 className=\"title\">Criar section</h2>\n\n          <div className=\"container\">\n            <div className=\"page-content\">\n              <label htmlFor=\"post-title\">Titulo</label>\n              <input\n                type=\"text\"\n                id=\"post-title\"\n                placeholder=\"Titulo\"\n                name=\"title\"\n                onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                value={title}\n              />\n\n              <label htmlFor=\"card-img\">Imagem da seção</label>\n              <input\n                type=\"text\"\n                id=\"card-img\"\n                placeholder=\"URL\"\n                name=\"img\"\n                onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                value={img}\n              />\n\n              {/* <label htmlFor=\"card-img\">Tamanho da imagem da seção</label>\n              <input\n                type=\"text\"\n                id=\"card-img-width\"\n                placeholder=\"px\"\n                name=\"imgSize\"\n                onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                value={imgSize}\n              /> */}\n\n              <label htmlFor=\"color-page\">Cor da section</label>\n              <input\n                type=\"text\"\n                id=\"color-section\"\n                placeholder=\"rgb(r, g, b)\"\n                name=\"colorSection\"\n                onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                value={colorSection}\n              />\n\n              <label htmlFor=\"color-page\">Cor do rodapé e da barra lateral</label>\n              <input\n                type=\"text\"\n                id=\"color-section\"\n                placeholder=\"rgb(r, g, b)\"\n                name=\"colorNavFooter\"\n                onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                value={colorNavFooter}\n              />\n\n              <label htmlFor=\"card-text\">Sobre</label>\n              <textarea\n                type=\"text\"\n                id=\"card-text\"\n                placeholder=\"Digite seu texto aqui\"\n                name=\"about\"\n                onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                value={about}\n              />\n\n              <label htmlFor=\"card-text\">Índice</label>\n              <textarea\n                type=\"text\"\n                id=\"card-text\"\n                placeholder=\"Digite seu texto aqui\"\n                name=\"indexText\"\n                onChange={({ target: { name, value } }) => this.updatePost(name, value)}\n                value={indexText}\n              />\n\n            </div>\n          </div>\n\n          <div className=\"buttons\">\n            <button\n              id=\"create\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.props.handleSubmit(this.state);\n                }\n              }\n              hidden={!newSection}\n            >\n              Criar\n            </button>\n\n            <button\n              id=\"update\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.props.handleSubmit(this.state);\n                }\n              }\n              hidden={!editSection}\n            >\n              Atualizar\n            </button>\n\n            <button\n              id=\"preview\"\n              type=\"submit\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  this.setState({ preview: true })\n                }\n              }\n            >\n              Preview\n            </button>\n          </div>\n\n        </form>\n\n        <div id=\"preview-post\">\n          {preview ? this.previewPost() : ''}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SectionForm;","/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditSection.jsx",[],["112","113"],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewPost.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/EditPost.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Post.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/NewSection.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/PostComponents/PostVideo.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/reportWebVitals.js",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Home.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/services/api.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/components/Footer.jsx",[],"/home/vitor/Documentos/Projetos/Blog_Bahia/web/blog-bahia-react/src/pages/Section.jsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":316,"column":23,"nodeType":"122","messageId":"123","endLine":316,"endColumn":31},{"ruleId":"114","replacedBy":"124"},{"ruleId":"116","replacedBy":"125"},{"ruleId":"120","severity":1,"message":"126","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":12},{"ruleId":"114","replacedBy":"127"},{"ruleId":"116","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],"no-unused-vars","'position' is assigned a value but never used.","Identifier","unusedVar",["129"],["130"],"'Card' is defined but never used.",["129"],["130"],"no-global-assign","no-unsafe-negation"]